---
description: 
globs: 
alwaysApply: false
---
# State Management

The application state is primarily managed by two `ObservableObject` classes:

1.  **[`MainModel.swift`](mdc:Prompt-you/MainModel.swift):**
    *   Holds the array of active panes: `@Published var panes: [ChatPane]`.
    *   Manages the currently focused pane index: `@Published var focusedPaneIndex: Int?`.
    *   Stores the text entered in the main prompt input field: `@Published var promptText: String`.
    *   Tracks whether a prompt broadcast is in progress: `@Published var isBroadcasting: Bool`.
    *   Contains methods for adding (`addPane`), removing (`removePane`), and focusing panes (`setFocus`, `cycleFocus`).
    *   Handles saving/loading the list of active pane providers and the focused index to `UserDefaults`.
    *   Manages the Cmd+T "New Tab" flow (`openNewTabPicker`, `replacePicker`).
    *   Holds a reference to the `ProfileStore`.

2.  **[`ProfileStore.swift`](mdc:Prompt-you/ProfileStore.swift):**
    *   Manages user-defined profiles (`Profile` struct).
    *   Holds the list of all profiles: `@Published private(set) var profiles: [Profile]`.
    *   Tracks the active profile ID: `@Published var activeProfileID: UUID?`.
    *   Handles CRUD operations for profiles (add, delete, rename, update providers).
    *   Saves/loads profiles and the active ID to `UserDefaults`.
    *   [`MainModel`](mdc:Prompt-you/MainModel.swift) uses this to load the panes associated with the active profile.

Each [`ChatPane.swift`](mdc:Prompt-you/ChatPane.swift) instance manages its own state, such as `isProviderPicker` for the new tab flow.

See also: `architecture.mdc`, `new_tab.mdc`.
